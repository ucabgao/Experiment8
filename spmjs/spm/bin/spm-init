#!/usr/bin/env node

var path = require('path');
var grunt = require('grunt');
var commander = require('commander');
var color = require('colorful').color;
var spmrc = require('spmrc');

/*
  template directory
*/
var homeDir = process.env.HOME || process.env.USERPROFILE;
if (!homeDir) {
  homeDir = process.env.HOMEDRIVE + process.env.HOMEPATH;
}
var defaultTemplate = path.dirname(__dirname) + '/lib/init-template/';
var template = exports.template = (spmrc.get('init.template') || defaultTemplate).replace(/^~/, homeDir);

/*
  commander init
*/

commander
  .version(require('../package.json').version)
  .option('-v, --verbose', 'Show more infomation.')
  .option('-f, --force', 'Force to process the task.');

commander.on('--help', function() {
  console.log();
  console.log('  Change init default template in ~/.spm/spmrc-3x');
  console.log();
  console.log(color.magenta('  [init]'));
  console.log('  template = ' + defaultTemplate);
  console.log();
});

commander.parse(process.argv);


/*
  fetch template if not exist
*/

runTask();

/*
  run grunt init task
*/

function runTask() {
  grunt.task.loadTasks(path.join(__dirname, '../node_modules/grunt-init/tasks'));
  // fix windows directory by replace C:\ to C\:\
  var taskName = 'init:' + template.replace(/^([a-zA-Z]):\\/, '$1\\:\\');
  grunt.cli.tasks = [taskName];
  grunt.cli({});
}

